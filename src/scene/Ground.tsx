/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { BackSide, FrontSide } from "three";

type GLTFResult = GLTF & {
    nodes: {
        Plane: THREE.Mesh;
    };
    materials: {};
};

export function Model(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF("/models/terrain.glb") as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Plane.geometry}
                scale={8.59}
            >
                {props.children}
            </mesh>
        </group>
    );
}

useGLTF.preload("/models/terrain.glb");

export function Ground() {
    return (
        <>
            <Model castShadow receiveShadow position={[0, -3.04, 0]} >
                <shadowMaterial opacity={0.4} />
            </Model>
            <Model castShadow receiveShadow position={[0, -3.05, 0]} >
                <meshLambertMaterial color={'#36a745'} />
            </Model>
        </>
    )
}